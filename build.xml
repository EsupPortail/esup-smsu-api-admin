<project default="help" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
		 uri="antlib:org.apache.maven.artifact.ant"
		 classpath="utils/ant/maven-ant-tasks-2.1.3.jar"/>
	
	<property name="build.dir" value="build"/>
	<property name="build.classes" value="${build.dir}/WEB-INF/classes"/>


	<target name="help">
		<java classname="org.apache.tools.ant.Main"><arg value="-projecthelp"/></java>
	</target>

	<target name="clean" description="clean the project" >
		<delete dir="${build.dir}" />
		<delete dir="tmp" />
	</target>

	<target name="prepare" >
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes}" />

		<condition property="need-download-jars">
		  <not> <available file="${build.dir}/WEB-INF/lib" type="dir" /> </not>
		</condition>

		<condition property="need-download-utils-jars">
		  <not> <available file="tmp/lib" type="dir" /> </not>
		</condition>
	</target>

	<target name="download" depends="download-jars,download-utils-jars" />
		
	<property name="esup-commons-version" value="[0.3.3, 0.4)" />
	<property name="spring-version" value="3.2.3.RELEASE" />
	<property name="jetty-version" value="8.1.9.v20130131" />

	<target name="download-jars" depends="prepare" if="need-download-jars">
	      <artifact:remoteRepository id="esup" url="https://mvn.esup-portail.org/content/repositories/releases" />
	      

	      <artifact:dependencies filesetId="jar.fileset">


		<dependency groupId="commons-collections" artifactId="commons-collections" version="[3.1, 4)" />
		<dependency groupId="commons-io" artifactId="commons-io" version="[1.2, 2)" />
		<dependency groupId="commons-lang" artifactId="commons-lang" version="[2.1, 3)" />

		<dependency groupId="org.springframework" artifactId="spring-core" version="${spring-version}" />
		<dependency groupId="org.springframework" artifactId="spring-orm" version="${spring-version}" />
		<dependency groupId="org.springframework" artifactId="spring-context-support" version="${spring-version}" />
		<dependency groupId="org.springframework" artifactId="spring-web" version="${spring-version}" />


		<!-- below is required by jsr168forwardport.org.springframework.web.portlet (esup-commons2-web) -->
		<!-- forcing our version -->
		<dependency groupId="org.springframework" artifactId="spring-test" version="${spring-version}" />
		<dependency groupId="org.springframework" artifactId="spring-webmvc" version="${spring-version}" />

		<!-- aop ? -->
		<dependency groupId="org.aspectj" artifactId="aspectjrt" version="[1.6.2, 2)" />

		<dependency groupId="org.jasig.cas.client" artifactId="cas-client-core" version="[3.2.1, 4)" />
		
		<remoteRepository refid="esup" />

		<dependency groupId="esup" artifactId="esup-uportal-ws-client" version="RELEASE" />

		<dependency groupId="org.esupportail" artifactId="esup-commons2-ldap" version="${esup-commons-version}" >
		  <!-- only used by StringUtils.removeUtf8Accents. Too big to keep unused -->
		  <exclusion groupId="com.ibm.icu" artifactId="icu4j" />
		</dependency>

		<!-- hibernate connection pooling -->
		<!--dependency groupId="org.hibernate" artifactId="hibernate-c3p0" version="3.3.2.GA" /-->

		<dependency groupId="org.esupportail" artifactId="esup-commons2-hibernate" version="${esup-commons-version}" >
		  <!-- remove unneeded -->
		  <exclusion groupId="postgresql" artifactId="postgresql" />
		  <exclusion groupId="hsqldb" artifactId="hsqldb" />
		</dependency>
		<dependency groupId="org.esupportail" artifactId="esup-commons2-web" version="${esup-commons-version}" >
		  <!-- spring-asm is no more in spring 3.2.x -->
		  <exclusion groupId="org.springframework" artifactId="spring-asm" />
		</dependency>
		<dependency groupId="org.esupportail" artifactId="esup-commons2-exceptionHandling" version="${esup-commons-version}" />
		
		<dependency groupId="com.sun.jersey.contribs" artifactId="jersey-spring" version="[1.17.1, 2)" >
				<exclusion groupId="org.springframework" artifactId="spring-aop" />
				<exclusion groupId="org.springframework" artifactId="spring-core" />
				<exclusion groupId="org.springframework" artifactId="spring-web" />
				<exclusion groupId="org.springframework" artifactId="spring-beans" />
				<exclusion groupId="org.springframework" artifactId="spring-context" />
		</dependency>
		<dependency groupId="com.sun.jersey" artifactId="jersey-json" version="[1.17.1, 2)" >
		  <!-- jackson is much better! -->
		  <exclusion groupId="org.codehaus.jettison" artifactId="jettison" />
		</dependency>
		<!-- for @RolesAllowed : -->
		<dependency groupId="javax.annotation" artifactId="jsr250-api" version="[1.0, 2)" />

		<!-- for CORS filter (CrossOriginFilter) -->
		<dependency groupId="org.eclipse.jetty" artifactId="jetty-servlets" version="${jetty-version}" >
		  <exclusion groupId="org.eclipse.jetty" artifactId="jetty-continuation" />
		  <exclusion groupId="org.eclipse.jetty" artifactId="jetty-http" />
		  <exclusion groupId="org.eclipse.jetty" artifactId="jetty-io" />
		</dependency>
            
	      </artifact:dependencies>

	      <copy todir="${build.dir}/WEB-INF/lib">
		<fileset refid="jar.fileset"/>
		<mapper type="flatten"/>
	      </copy>
	</target>

	<target name="download-utils-jars" depends="prepare" if="need-download-utils-jars">
	      <!-- servlet-api is for compilation/batch only. In a real tomcat, it is provided -->
	      <!-- portlet-api is for compilation/batch only. In a real portal, it is provided -->
	      <mkdir dir="tmp/lib" />
	      
	      <artifact:dependencies filesetId="utils.jar.fileset">
		<dependency groupId="javax.servlet" artifactId="servlet-api" version="2.5" />
		<dependency groupId="javax.portlet" artifactId="portlet-api" version="1.0" />
	      </artifact:dependencies>
	      
	      <copy todir="tmp/lib">
		<fileset refid="utils.jar.fileset"/>
		<mapper type="flatten"/>
	      </copy>
	</target>

	<target name="compile" depends="download" description="compile the project" >
		<property name="compile.debug" value="true" />
		<property name="compile.deprecation" value="true" />
		<property name="compile.optimize" value="true" />
		<property name="compile.nowarn" value="false" />

		<path id="compile.classpath">
		  <fileset dir="${build.dir}/WEB-INF/lib" includes="**/*.jar" />
		  <fileset dir="tmp/lib" includes="**/*.jar" />
		</path>

		<javac 
			srcdir="src" 
			destdir="${build.classes}" 
			debug="${compile.debug}" 
			nowarn="${compile.nowarn}" 
			deprecation="${compile.deprecation}" 
			includeantruntime="false"
			optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>
		<copy todir="${build.classes}/properties" overwrite="true" >
			<fileset dir="properties" />
		</copy>
	</target>

	<target name="deploy" depends="compile" description="deploy the application" >
		<property file="build.properties" />
		<fail unless="deploy.home" message="Please set property deploy.home in build.properties" />

		<sync todir="${deploy.home}" >
			<fileset dir="webapp" />
			<fileset dir="${build.dir}" excludes="WEB-INF/classes/org/esupportail/commons/portal/ws/**/*" />
		</sync>
	</target>


<!-- ******************************************************************************** -->
<!-- * below are helper targets ***************************************************** -->
<!-- ******************************************************************************** -->

	<target name="hotswap" depends="tstamp,compile">
		<taskdef name="hotswap" classname="dak.ant.taskdefs.Hotswap">
		  <classpath>
		    <pathelement location="utils/ant/hotswap.jar"/>
		  </classpath>
		</taskdef>

		<property file="build.properties" />

		<hotswap verbose="true" port="${jpdaAddress}">
		  	<fileset dir="${build.classes}" includes="**/*.class">
			  <date datetime="${date}" pattern="d-MMMM-yyyy HH:mma" when="after"/>
			</fileset>
		</hotswap>
	</target>

	<target name="tstamp">
	  <tstamp>
	    <!-- for hotswap target -->
	    <format property="date" pattern="d-MMMM-yyyy HH:mma" locale="en"/>
	  </tstamp>
	</target>

	<target name="prepare-jetty">
	  <condition property="need-download-jetty-ant">
	    <not><available file="tmp/jetty-lib" type="dir" /></not>
	  </condition>
	</target>

	<target name="download-jetty-ant" if="need-download-jetty-ant">
	      <artifact:dependencies filesetId="jetty-ant.fileset">
		<dependency groupId="org.mortbay.jetty" artifactId="jetty-ant" version="${jetty-version}" >
		</dependency>
	      </artifact:dependencies>

	      <copy todir="tmp/jetty-lib">
		<fileset refid="jetty-ant.fileset"/>
		<mapper type="flatten"/>
	      </copy>
	</target>
	
	<target name="jetty.run" depends="prepare-jetty,download-jetty-ant,compile" description="test using jetty">

	  <path id="jetty.plugin.classpath">
	    <fileset dir="tmp/jetty-lib" includes="*.jar"/>
	  </path>
	  <taskdef classpathref="jetty.plugin.classpath" resource="tasks.properties" loaderref="jetty.loader" />

	  <jetty tempDirectory="tmp/jetty-temp">
	    <webApp name="esup-smsu-api-admin" warfile="webapp" contextpath="/esup-smsu-api-admin">
	      <lib dir="${build.dir}/WEB-INF/lib" includes="*.jar" />
	      <classes dir="${build.classes}" includes="*.class" />
	      <attributes>
		<!-- disable "servlet api 3.0 classpath scanning" otherwise dead slow startup -->
		<attribute name="org.eclipse.jetty.server.webapp.WebInfIncludeJarPattern" value="no jar!"/>
	      </attributes>
	    </webApp>
	  </jetty>
	</target>
	
	<target name="_dist" description="build ZIP archives" >

		<property file="properties/version.properties" />
		<property name="dist.dir" value="dist"/>
		<property name="zip.file" value="${dist.dir}/${app.name}-${app.versionMajorNumber}.${app.versionMinorNumber}.${app.versionUpdate}-${app.release}.zip"/>

		<property name="app.zip-files.exclude" value="" />
		<property name="app.zip-files.include" value="
		build.properties
		build.xml
		properties/**/*.*
		src/**/*.java 
		utils/ant
    	        webapp
		" />

		<mkdir dir="${dist.dir}"/>
		<delete file="${zip.file}" failonerror="false" />
		<zip destfile="${zip.file}">
				    <zipfileset 
				    	dir="." 
				    	excludes="${app.zip-files.exclude}" 
				    	includes="${app.zip-files.include}"
				    	prefix="${app.name}-${app.version}"/>
		</zip>
	</target>

</project>


